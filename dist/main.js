(()=>{"use strict";function e(e,t){if(e<t-1&&e>0)return"top";if(e<t**2-1&&e>t**2-t)return"bottom";for(let a=1;a<t-1;a+=1){if(e===t*a)return"left";if(e===t*a+(t-1))return"right"}switch(e){case 0:return"top-left";case t-1:return"top-right";case t*(t-1):return"bottom-left";case t**2-1:return"bottom-right";default:return"center"}}function t(e,t){return e.map(t)}function a(e,t){return Object.assign(e,t),e}const s={prairie:"prairie",desert:"desert",arctic:"arctic",mountain:"mountain"};class i{constructor(e){this.levelGame=1,this.gamePlay=e,this.isMove="user",this.countClick=0,this.userTeamSurvivors=[],this.history=[],this.points=0,this.block=!1,this.userTeam=[],this.compTeam=[],this.activeChar=null,this.indexSelect=null,this.transitionCells=[],this.attackCells=[],this.showModal=!1}getAllPlayer(){if(!this.userTeam||!this.compTeam)throw new Error("it must have 2 arguments");return[...this.userTeam,...this.compTeam]}calculateSumPoints(){return this.userTeam.reduce(((e,t)=>e+t.character.health),0)}getUserPosition(){const e=this.userTeam.find((e=>this.attackCells.includes(e.position)));return e?e.position:void 0}findPresumedDeceasedPlayer(){return this.getAllPlayer().find((e=>e.position===this.activeCharUser?.position))}getPresumedDeceasedPlayerInfo(e){return{index:("comp"===this.isMove?this.userTeam:this.compTeam).findIndex((t=>e===t.position)),teamKey:"comp"===this.isMove?"userTeam":"compTeam"}}getPlayer(e){return this.getAllPlayer().find((t=>t.position===e))}}const l="auto",n="pointer",r="crosshair",o="not-allowed",h=new class{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[],this.isModal=!1,this.initModalListener()}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}initModalListener(){document.addEventListener("click",(e=>{"modalHandlerCancel"===e.target.dataset.handler&&this.currentModal&&(this.currentModal.hide(),this.isModal=!1)}))}drawUi(t){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t);for(let t=0;t<this.boardSize**2;t+=1){const a=document.createElement("div");a.classList.add("cell","map-tile",`map-tile-${e(t,this.boardSize)}`),a.addEventListener("mouseenter",(e=>this.onCellEnter(e))),a.addEventListener("mouseleave",(e=>this.onCellLeave(e))),a.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(a)}this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const a of e){const e=this.boardEl.children[a.position],s=document.createElement("div");s.classList.add("character",a.character.type);const i=document.createElement("div");i.classList.add("health-level");const l=document.createElement("div");l.classList.add("health-level-indicator","health-level-indicator-"+((t=a.character.health)<15?"critical":t<50?"normal":"high")),l.style.width=`${a.character.health}%`,i.appendChild(l),s.appendChild(i),e.appendChild(s)}var t}showModal(e,t){const a=new ModalPopup({title:e,content:`&#${t}`,footerButtons:[{class:"btn btn__cancel",text:"Close",handler:"modalHandlerCancel"}]});this.currentModal=a,a.show()}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(){this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(){this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(){this.loadGameListeners.forEach((e=>e.call(null)))}showModalMessage(e,t){this.isModal||(this.isModal=!0,this.showModal(e,t))}selectCell(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"yellow";this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t&&t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((a=>{const s=this.cells[e],i=document.createElement("span");i.className="damage",i.textContent=t,s.appendChild(i),i.addEventListener("animationend",(()=>{s.removeChild(i),a(!0)}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}};h.bindToDOM(document.querySelector("#game-container"));const c=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),m=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.gameState=new i(this.gamePlay),this.onCellClick=this.onCellClick.bind(this),this.onCellEnter=this.onCellEnter.bind(this),this.onCellLeave=this.onCellLeave.bind(this),this.newGame=this.newGame.bind(this),this.saveGame=this.saveGame.bind(this),this.loadGame=this.loadGame.bind(this),this.events()}init(){this.initNewTeams(),this.updatePicture()}events(){this.gamePlay.addCellEnterListener(this.onCellEnter),this.gamePlay.addCellLeaveListener(this.onCellLeave),this.gamePlay.addCellClickListener(this.onCellClick),this.gamePlay.addNewGameListener(this.newGame),this.gamePlay.addSaveGameListener(this.saveGame),this.gamePlay.addLoadGameListener(this.loadGame)}newGame(){const e={levelGame:1,countClick:0,history:[...this.gameState.history,{levelGame:this.gameState.levelGame,points:this.gameState.points}],isMove:"user",block:!1,points:0};a(this.gameState,e),this.reset(),this.init()}saveGame(){this.gameState.attackCells=[],this.gameState.transitionCells=[],this.gameState.activeCharUser=null,this.stateService.save(this.gameState),this.gamePlay.showModalMessage("Your game has saved!","9997")}loadGame(){try{const e=this.stateService.load();this.restoreGameState(e),this.restoreActiveCharacter(e.activeChar),this.updatePicture(),this.showGameInfo()}catch(e){this.handleLoadingError()}}restoreGameState(e){const{levelGame:t,countClick:s,history:i,isMove:l,block:n,points:r,indexSelect:o}=e;a(this.gameState,{levelGame:n?t-1:t,countClick:s,history:i,isMove:l,block:n,points:r,indexSelect:o}),this.resetTeams(e)}restoreActiveCharacter(e){const t=restoreChar(e);t&&"user"===t.isMove&&this.reactOnClick(t,["bowman","swordsman","magician"])}handleLoadingError(){this.gamePlay.showModalMessage("There's no game in memory","128075"),this.newGame()}initNewTeams(){this.gameState.userTeam=this.getUserTeam([this.gameState.levelGame,this.gameState.levelGame]),this.gameState.compTeam=this.getCompTeam([this.gameState.levelGame,this.gameState.levelGame])}resetTeams(e){this.gameState.userTeam=t(e.userTeam,restoreChar),this.gameState.compTeam=t(e.compTeam,restoreChar)}levelUp(){const e=Object.values(s);this.updateTeams(),this.gameState.getAllPlayer().forEach((e=>e.character.levelUp())),this.gamePlay.drawUi(e[(this.gameState.levelGame-1)%e.length]),this.gameState.countClick=0,this.gameState.indexSelect=null}updateTeams(){const e=this.getUserTeam([this.gameState.levelGame-1,this.gameState.levelGame]),t=chooseRandPositions(this.gamePlay.boardSize);e.forEach((e=>{t.splice(t.indexOf(e.position),1)})),this.gameState.userTeamSurvivors.forEach((e=>{if(!t.includes(e.position)){const a=t[Math.floor(Math.random()*t.length)];e.position=a}})),this.gameState.userTeam=this.gameState.userTeamSurvivors.concat(e),this.gameState.userTeamSurvivors=[],this.gameState.compTeam=this.getCompTeam([this.gameState.levelGame-1,this.gameState.userTeam.length])}showGameInfo(){const e=this.gameState.points?`Your level ${this.gameState.levelGame} and points ${this.gameState.points}`:"There's no points. \n It's the first round",t=this.gameState.points?"128076":"128083";this.gamePlay.showModalMessage(e,t)}async onCellClick(e){if(this.gameState.block)return;const t=this.gameState.getAllPlayer().find((t=>t.position===e));this.gameState.activeChar&&await this.handleUserTurn(e),this.reactOnClick(t,["bowman","swordsman","magician"]),this.gameState.countClick>=1&&await this.handleComputerTurn()}async handleUserTurn(e){this.gameState.indexSelect&&(this.gameState.indexSelect.green===e&&(this.gameState.activeChar.position=e,this.gameState.countClick+=1,this.gamePlay.redrawPositions(this.gameState.getAllPlayer())),this.gameState.indexSelect.red===e)&&(this.gameState.isMove="user",await this.doDamage(e)&&(this.gameState.countClick+=1,this.gamePlay.redrawPositions(this.gameState.getAllPlayer()),await this.checkGameProgress()))}async checkGameProgress(){0===this.gameState.compTeam.length&&(this.gameState.levelGame+=1,this.gameState.points+=this.gameState.calculateSumPoints(),this.reset(),this.gameState.userTeamSurvivors=this.gameState.userTeam,this.gamePlay.showModalMessage(`Level up! Your level ${this.gameState.levelGame} and total points are ${this.gameState.points}`,"9996"),this.levelUp(),this.gamePlay.redrawPositions(this.gameState.getAllPlayer()))}async handleComputerTurn(){this.gameState.activeCharUser=this.gameState.activeChar,this.gameState.isMove="comp",await this.doAttackComp(this)&&(this.gameState.countClick=0,this.gameState.isMove="user",this.gameState.findPresumedDeceasedPlayer()&&(this.gameState.activeChar=this.gameState.activeCharUser,this.reactOnClick(this.gameState.activeChar,["bowman","swordsman","magician"]),this.gamePlay.redrawPositions(this.gameState.getAllPlayer())))}onCellEnter(e){if(this.gameState.block)return;const t=this.gameState.getPlayer(e);if(t&&this.gamePlay.showCellTooltip(function(e){return`🎖${e.level} ⚔${e.attack} 🛡${e.defence} ❤${e.health}`}(t.character),e),!this.gameState.activeChar)return;const a=this.gameState.transitionCells.includes(e),s=this.gameState.attackCells.includes(e),i=this.gameState.userTeam.some((t=>t.position===e)),l=this.gameState.compTeam.some((t=>t.position===e));this.gamePlay.setCursor(n),this.gameState.indexSelect&&(!a||i||l||(this.gameState.indexSelect.green=e,this.gamePlay.selectCell(e,"green")),s&&l&&(this.gameState.indexSelect.red=e,this.gamePlay.selectCell(e,"red"),this.gamePlay.setCursor(r)))}onCellLeave(e){if(this.gamePlay.hideCellTooltip(e),this.gameState.block)return;const t=document.querySelector(".selected-green"),a=this.gameState.attackCells?.includes(e),s=this.gameState.compTeam.some((t=>t.position===e));t&&(this.gamePlay.deselectCell(this.gameState.indexSelect.green),!a&&s&&(this.gamePlay.deselectCell(this.gameState.indexSelect.green),this.gamePlay.setCursor(o))),document.querySelector(".selected-red")&&this.gamePlay.deselectCell(this.gameState.indexSelect.red)}reactOnClick(e,t){e&&(t.includes(e.character.type)?(this.updateSelectedCell(e.position),this.gamePlay.selectCell(e.position),this.gameState.activeChar=e):this.handleInvalidSelection(e.position))}updateSelectedCell(e){this.gameState.indexSelect&&document.querySelector(".selected-yellow")&&this.gamePlay.deselectCell(this.gameState.indexSelect.yellow),this.gameState.indexSelect={yellow:e}}handleInvalidSelection(e){const t=this.gameState.indexSelect,a=!this.gameState.attackCells.includes(e),s=this.gameState.compTeam.some((t=>t.position===e));t&&a&&s?this.gamePlay.showModalMessage("It can't be done","9940"):this.gameState.activeChar||this.gamePlay.showModalMessage("This isn`t your character","9995")}async doDamage(e){const{attack:t}=this.gameState.activeChar.character,a=this.gameState.getPlayer(e),{defence:s,health:i}=a.character,l=function(e,t){return Math.round(Math.max(e-t,.3*e))}(t,s);return!!await this.gamePlay.showDamage(e,l)&&(a.character.health=i-l,this.checkHealthRemoveDead(a),!0)}checkHealthRemoveDead(e){if(e.character.health<=0){const t=this.gameState.getPresumedDeceasedPlayerInfo(e.position);-1!==t.index&&(this.gameState[t.teamKey].splice(t.index,1),this.gameState.indexSelect=null)}}reset(){this.gameState.indexSelect&&(Object.keys(this.gameState.indexSelect).forEach((e=>{this.gamePlay.deselectCell(this.gameState.indexSelect[e])})),this.gameState.indexSelect=null,this.gamePlay.setCursor(l))}updatePicture(){const e=this.gameState.levelGame>0?this.gameState.levelGame-1:0;this.gamePlay.drawUi(Object.values(s)[e]),this.gamePlay.redrawPositions(this.gameState.getAllPlayer()),this.gameState.indexSelect&&this.gameState.indexSelect.yellow&&this.gamePlay.selectCell(this.gameState.indexSelect.yellow)}async doAttackComp(){const e=(t=this.gameState.compTeam)[Math.floor(Math.random()*t.length)];var t;this.gameState.activeChar=e,this.reactOnClick(e,["daemon","undead","vampire"]);const a=this.gameState.getUserPosition();return void 0!==a?await this.doDamage(a)&&(this.checkAndEndGameIfNecessary(),this.updatePicture()):(this.gameState.activeChar.position=this.moveToRandomPosition(),this.gamePlay.redrawPositions(this.gameState.getAllPlayer())),this.gameState.activeChar=null,this.reset(),!0}checkAndEndGameIfNecessary(){0===this.gameState.userTeam.length&&(this.gameState.block=!0,this.gamePlay.showModalMessage("You lose!","129335"))}moveToRandomPosition(){let e,t;do{e=Math.floor(Math.random()*this.gameState.transitionCells.length);const a=this.gameState.transitionCells[e];t=this.gameState.getAllPlayer().some((e=>e.position===a))}while(t);return this.gameState.transitionCells[e]}}(h,c);m.init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,